<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.savit.challenge.mapper.ChallengeMapper">

    <!-- 1번. 사용자 1주 챌린지 성공 여부 + category_id 조회 -->
    <select id="findSuccessfulWeeklyCategories" resultType="Long">
        select distinct c.category_id
        from challengeparticipation as cp
                 inner join challenge as c on cp.challenge_id = c.id
        where cp.user_id = #{userId}
          and cp.status = 'SUCCESS'
          and c.duration_weeks = 1
    </select>


    <!-- 알림용 챌린지 시작일 쿼리 -->
    <select id="findByStartDate" parameterType="java.time.LocalDate" resultType="com.savit.notification.dto.ChallengeNotificationDTO">
        SELECT
            id AS challengeId,
            title,
            start_date AS startDate,
            end_date AS endDate
        FROM Challenge
        WHERE start_date = #{startDate}
    </select>

    <!-- 알림용 챌린지 종료일 쿼리 -->
    <select id="findByEndDate" parameterType="java.time.LocalDate" resultType="com.savit.notification.dto.ChallengeNotificationDTO">
        SELECT
            id AS challengeId,
            title,
            start_date AS startDate,
            end_date AS endDate
        FROM Challenge
        WHERE end_date = #{endDate}
    </select>

    <!-- 챌린지 참여중인 사람 찾기 -->
    <select id="findUserIdsByChallengeId" resultType="long">
        SELECT user_id
        FROM ChallengeParticipation
        WHERE challenge_id = #{challengeId}
          AND status = 'PARTICIPATING'
    </select>

    <!--참여 가능한 1주 챌린지 목록 조회(1번 여부 상관 없이 조회됨)-->
    <select id="findWeeklyChallenges" resultType="com.savit.challenge.dto.ChallengeListDTO">
        select c.id as challenge_id, c.title, c.start_date, c.end_date, cat.name as categoryName
        from challenge c
                 inner join
             category as cat on c.category_id = cat.id
        where current_date &lt;  c.start_date
          and c.duration_weeks = 1
        order by c.start_date asc
    </select>

    <!-- 1번 기준 충족시 4주 챌린지 목록 조회 -->
    <select id="findMonthlyChallenges" resultType="com.savit.challenge.dto.ChallengeListDTO">
        select c.id as challenge_id, c.title, c.start_date, c.end_date, cat.name as categoryName
        from challenge c
                 inner join
             category as cat on c.category_id = cat.id
        where current_date &lt;  c.start_date
          and c.duration_weeks = 4
          and c.category_id = #{categoryId}
        order by c.start_date asc


    </select>
    <select id="findById" resultType="com.savit.challenge.domain.ChallengeVO">

        select id,
               title,
               description,
               start_date,
               end_date,
               total_participants,
               joined_participants,
               target_count,
               target_amount,
               type,
               duration_weeks,
               category_id
        from challenge
        where id = #{id}
    </select>


    <select id="findParticipatingChallenges" resultType="com.savit.challenge.dto.ChallengeListDTO">
        select cp.challenge_id, c.title, c.start_date, c.end_date
        from challengeParticipation as cp
                 inner join challenge as c on cp.challenge_id = c.id
        where cp.user_id = #{userId}
          and cp.status = 'PARTICIPATING'
        ORDER BY c.start_date ASC;
    </select>

    <!-- 진행 중인 챌린지별 낙오 요약 통계 조회 -->
    <select id="getChallengeDropoutSummaries" resultType="com.savit.challenge.dto.ChallengeDropoutSummaryDTO">
        <![CDATA[
            SELECT
                c.id as challengeId,
                c.title as challengeTitle,
                COUNT(cp.id) as totalParticipants,
                SUM(CASE WHEN cp.status = 'FAIL' THEN 1 ELSE 0 END) as dropoutCount,
                (COUNT(cp.id) - SUM(CASE WHEN cp.status = 'FAIL' THEN 1 ELSE 0 END)) as activeCount
            FROM Challenge c
            JOIN ChallengeParticipation cp ON c.id = cp.challenge_id
            WHERE c.start_date <= CURDATE()
              AND c.end_date >= CURDATE()
            GROUP BY c.id, c.title
        ]]>
    </select>

    <!-- 특정 챌린지의 FCM 토큰 등록된 참여자 조회 -->
    <select id="findParticipantUserIdsByChallengeId" resultType="Long">
        <![CDATA[
            SELECT DISTINCT cp.user_id
            FROM ChallengeParticipation cp
            JOIN UserFcmTokens uft ON cp.user_id = uft.user_id
            WHERE cp.challenge_id = #{challengeId}
              AND uft.is_active = true
              AND uft.fcm_token != ''
        ]]>
    </select>

    <select id="selectChallengeType" resultType="java.lang.String">
        select type from challenge where id = #{challengeId}
    </select>

    <!--현황 조회-->
    <select id="selectChallengeStatus" resultType="com.savit.challenge.dto.ChallengeStatusDTO">
        SELECT c.title,
               DATE_FORMAT(c.start_date, '%Y-%m-%d') AS startDate,
               DATE_FORMAT(c.end_date, '%Y-%m-%d') AS endDate,
               c.target_amount AS targetAmount,
               c.target_count AS targetCount,
               c.type,
               COUNT(cp.id) AS joinedParticipants,
               COUNT(CASE WHEN cp.status = 'PARTICIPATING' THEN 1 END) AS participatingParticipants,
               SUM(cp.my_fee) AS entryFee,
               MAX(CASE WHEN cp.user_id = #{userId} THEN cp.my_fee END) AS myFee,
               CASE
                   WHEN COUNT(CASE WHEN cp.status = 'PARTICIPATING' THEN 1 END) = 0 THEN 0
                   ELSE ROUND(
                           SUM(CASE WHEN cp.status = 'FAIL' THEN cp.my_fee ELSE 0 END) /
                           COUNT(CASE WHEN cp.status = 'PARTICIPATING' THEN 1 END),
                           2
                        )
                   END AS expectedPrize
        FROM Challenge c
                 LEFT JOIN ChallengeParticipation cp ON c.id = cp.challenge_id
        WHERE c.id = #{challengeId}
        GROUP BY c.id, c.title, c.start_date, c.end_date, c.target_amount, c.target_count, c.type
    </select>

</mapper>