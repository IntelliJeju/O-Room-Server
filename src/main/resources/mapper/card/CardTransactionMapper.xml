<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.savit.card.mapper.CardTransactionMapper">

    <!-- 전체 사용자 기준 미분류 거래 조회 -->
    <select id="findUnclassifiedTransactions" resultType="com.savit.card.domain.CardTransactionVO">
        SELECT * FROM CardTransaction WHERE category_id IS NULL
    </select>

    <!-- 특정 사용자 기준 미분류 거래 조회 -->
    <select id="findUnclassifiedTransactionsByUser" resultType="com.savit.card.domain.CardTransactionVO">
        SELECT t.*
        FROM CardTransaction t
                 JOIN Card c ON t.card_id = c.id
        WHERE t.category_id IS NULL
          AND c.user_id = #{userId}
    </select>

    <!-- 거래의 카테고리 업데이트 -->
    <update id="updateCategory">
        UPDATE CardTransaction
        SET category_id = #{categoryId},
            res_member_store_type = #{resMemberStoreType},
            updated_at = NOW()
        WHERE id = #{transactionId}
    </update>

    <!-- 카드ID + 날짜 + 시간 + 사용자 기준 거래 ID 조회 -->
    <select id="findTransactionIdByCardIdAndDateTime" resultType="long">
        SELECT t.id
        FROM CardTransaction t
                 JOIN Card c ON t.card_id = c.id
        WHERE c.user_id = #{userId}
          AND t.card_id = #{cardId}
          AND t.res_used_date = #{resUsedDate}
          AND t.res_used_time = #{resUsedTime}
    </select>

    <!-- 해당 거래가 사용자 소유인지 여부 검증 -->
    <select id="isOwnedByUser" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM CardTransaction t
                     JOIN Card c ON t.card_id = c.id
            WHERE t.id = #{transactionId}
              AND c.user_id = #{userId}
        )
    </select>

    <!--금액 합계 조회: sum()-->
    <select id="sumAmountByParams" parameterType="map" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(CAST(res_used_amount AS DECIMAL(12,2))), 0)
        FROM CardTransaction
        WHERE card_id IN
        <foreach collection="cardIds" item="cardId" open="(" separator="," close=")">
            #{cardId}
        </foreach>
        AND category_id = #{categoryId}
        AND STR_TO_DATE(res_used_date, '%Y%m%d') >= DATE_SUB(NOW(), INTERVAL #{previousWeeks} WEEK)
        AND (res_cancel_yn IS NULL OR res_cancel_yn != 'Y')
    </select>

    <!-- 거래 횟수 조회: count(*) -->
    <select id="countByParams" parameterType="map" resultType="Long">
        SELECT COUNT(*)
        FROM CardTransaction
        WHERE card_id IN
        <foreach collection="cardIds" item="cardId" open="(" separator="," close=")">
            #{cardId}
        </foreach>
        AND category_id = #{categoryId}
        AND STR_TO_DATE(res_used_date, '%Y%m%d') >= DATE_SUB(NOW(), INTERVAL #{previousWeeks} WEEK)
        AND (res_cancel_yn IS NULL OR res_cancel_yn != 'Y')
    </select>

</mapper>
